@page "/Page"
@page "/Page/{Id:int?}"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inherits ModelContainerBase<Atlas.Core.Models.Page>

@{
    // Display the markup for the underlying base
    // ModelContainerBase<T> we are inheriting.
    base.BuildRenderTree(__builder);
}

@code {
    public override string? Title { get; set; } = "Page";
    public override string? APIGetEndpoint { get; set; } = AtlasAPIEndpoints.GET_PAGE;
    public override string? APICreateEndpoint { get; set; } = AtlasAPIEndpoints.CREATE_PAGE;
    public override string? APIUpdateEndpoint { get; set; } = AtlasAPIEndpoints.UPDATE_PAGE;
    public override string? APIDeleteEndpoint { get; set; } = AtlasAPIEndpoints.DELETE_PAGE;
    public override string? ModelNameField { get; set; } = "Name";
    public override string? IdentityFieldName { get; set; } = "PageId";

    public override RenderFragment RenderModelContent() => __builder =>
    {
        if (Model == null) throw new NullReferenceException(nameof(Model));

        <FluentAccordion>
            <FluentAccordionItem Expanded=true>
                <HeadingTemplate>
                    @if (Model.PageId.Equals(0))
                    {
                        <FluentLabel Typo="Typography.Body">New Page</FluentLabel>
                    }
                    else
                    {
                        <FluentLabel Typo="Typography.Body">@($"Page Id {Model.PageId}")</FluentLabel>
                    }
                </HeadingTemplate>
                <ChildContent>
                    <div>
                        <FluentTextField Name="Name" @bind-Value=Model.Name Label="Name" ReadOnly="@(Model.IsReadOnly)" />
                        <FluentValidationMessage For="@(() => Model.Name)" />
                    </div>
                    <div>
                        <FluentNumberField Name="Order" @bind-Value=Model.Order Label="Order" ReadOnly="@(Model.IsReadOnly)" />
                        <FluentValidationMessage For="@(() => Model.Order)" />
                    </div>
                    <div>
                        <GenericSelectList T="Atlas.Core.Models.Category"
                                           @bind-Value=@(Model.Category)
                                           ReadOnly="@(Model.IsReadOnly)"
                                           FieldName="Category"
                                           IdentifierFieldName="CategoryId"
                                           DisplayFieldName="Name"
                                           IconFieldName="Icon"
                                           Label="Category"
                                           OptionsCode="@Options.CATEGORIES_OPTION_ITEMS"
                                           ShowIcons="true" />
                        <FluentValidationMessage For="@(() => Model.Category)" />
                    </div>
                    <div>
                        <OptionsRequestList OptionsCode="@Options.PERMISSIONS_OPTION_ITEMS" @bind-Value=Model.Permission FieldName="Permission" Label="Permission" ReadOnly="@(Model.IsReadOnly)" />
                        <FluentValidationMessage For="@(() => Model.Permission)" />
                    </div>
                    <div>
                        <IconSelectList @bind-Value=Model.Icon FieldName="Icon" Label="Icon" ReadOnly="@(Model.IsReadOnly)" />
                        <FluentValidationMessage For="@(() => Model.Icon)" />
                    </div>
                    <div>
                        <OptionsServiceList OptionsCode="@Options.ROUTES" @bind-Value=Model.Route FieldName="Route" Label="Route" ReadOnly="@(Model.IsReadOnly)" />
                        <FluentValidationMessage For="@(() => Model.Route)" />
                    </div>
                </ChildContent>
            </FluentAccordionItem>

        </FluentAccordion>
    };
}