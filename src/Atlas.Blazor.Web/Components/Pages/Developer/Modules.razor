@page "/Modules"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inherits GridContainerBase<Atlas.Core.Models.Module>

@{
    // Display the markup for the underlying base 
    // GenericGridContainer<T> we are inheriting.
    base.BuildRenderTree(__builder);
}

@code{
    public override string? Title { get; set; } = "Modules";
    public override string? NavigateTo { get; set; } = AtlasWebConstants.PAGE_MODULE;
    public override string? APIEndpoint { get; set; } = AtlasAPIEndpoints.GET_MODULES;
    public override int ItemsPerPage { get; set; } = 20;
    public override string? FilterFieldName { get; set; } = "Name";
    public override string? IdentityFieldName { get; set; } = "ModuleId";
    public override string? CreatePermission { get; set; } = Auth.DEVELOPER;

    public override RenderFragment RenderGridContent() => __builder =>
    {
        <FluentDataGrid TGridItem=Atlas.Core.Models.Module Items="@FilteredItems"
                        Style="height: 600px;overflow:auto;" GridTemplateColumns="0.2fr 1fr 0.2fr 1fr"
                        ResizableColumns=true GenerateHeader="GenerateHeaderOption.Sticky"
                        Pagination="@Pagination">
            <PropertyColumn Property="@(m => m.ModuleId)" Sortable="true" Align="Align.Center" Title="Module Id"/>
            <PropertyColumn Property="@(m => m.Name)" Sortable="true" Filtered="!string.IsNullOrWhiteSpace(Filter)" Tooltip="true" Title="Name">
                <ColumnOptions>
                    <div class="search-box">
                        <FluentSearch type="filter" Autofocus=true @bind-Value=Filter @oninput="HandleFilter" @bind-Value:after="HandleClear" Placeholder="Module name..." />
                    </div>
                </ColumnOptions>
            </PropertyColumn>
            <PropertyColumn Property="@(m => m.Order)" Sortable="true" Title="Order" />
            <PropertyColumn Property="@(m => m.Permission)" Sortable="true" Title="Permission" />
            <TemplateColumn Align="@Align.Center">
                <FluentButton aria-label="Open" IconEnd="@(new Icons.Regular.Size16.MoreHorizontal())" OnClick="@(() => Edit(context))" />
            </TemplateColumn>
        </FluentDataGrid>
    };
}