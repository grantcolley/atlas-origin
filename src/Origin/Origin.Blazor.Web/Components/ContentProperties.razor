@typeparam T where T : ModelBase, IDocumentContentProperties

<div>
    <FontsSelect @key="Model.GetId()" 
                 Label="Font"
                 FieldName="Font"
                 Source="@FontSource"
                 @bind-Value="Model.Font"
                 ReadOnly="@(Model.IsReadOnly)" />
</div>
<div>
    <FluentNumberField Name="FontSize" @bind-Value="Model.FontSize" Label="Font Size" ReadOnly="@(Model.IsReadOnly)" Min="0" />
</div>
<div>
    <ColorSelect @key="Model.GetId()"
                 Label="Colour"
                 FieldName="Colour"
                 Source="@ColourSource"
                 @bind-Value="Model.Colour"
                 ReadOnly="@(Model.IsReadOnly)" />
</div>
<div>
    <FluentTextField Name="SubstituteStart" @bind-Value="Model.SubstituteStart" Label="Substitute Start" Maxlength="1" ReadOnly="@(Model.IsReadOnly)" />
    <FluentValidationMessage For="@(() => Model.SubstituteStart)" />
</div>
<div>
    <FluentTextField Name="SubstituteEnd" @bind-Value="Model.SubstituteEnd" Label="Substitute End" Maxlength="1" ReadOnly="@(Model.IsReadOnly)" />
    <FluentValidationMessage For="@(() => Model.SubstituteEnd)" />
</div>

@code {
    [Parameter, EditorRequired]
    public T Model { get; set; }

    [Parameter]
    public IEnumerable<DocumentFont>? FontSource { get; set; }

    [Parameter]
    public IEnumerable<DocumentColour>? ColourSource { get; set; }
}
