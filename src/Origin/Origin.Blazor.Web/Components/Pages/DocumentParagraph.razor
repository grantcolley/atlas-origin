@page "/DocumentParagraph"
@page "/DocumentParagraph/{Id:int?}"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inherits ModelContainerBase<Origin.Core.Models.DocumentParagraph>

@{
    // Display the markup for the underlying base
    // ModelContainerBase<T> we are inheriting.
    base.BuildRenderTree(__builder);
}

@code {
    public override string? Title { get; set; } = "Document Configuration";
    public override string? APIGetEndpoint { get; set; } = OriginAPIEndpoints.GET_DOCUMENT_PARAGRAPH;
    public override string? APICreateEndpoint { get; set; } = OriginAPIEndpoints.CREATE_DOCUMENT_PARAGRAPH;
    public override string? APIUpdateEndpoint { get; set; } = OriginAPIEndpoints.UPDATE_DOCUMENT_PARAGRAPH;
    public override string? APIDeleteEndpoint { get; set; } = OriginAPIEndpoints.DELETE_DOCUMENT_PARAGRAPH;
    public override string? ModelNameField { get; set; } = "Name";
    public override string? IdentityFieldName { get; set; } = "DocumentParagraphId";

    public override RenderFragment RenderModelContent() => __builder =>
    {
        if (Model == null) throw new NullReferenceException(nameof(Model));

        <FluentGrid Spacing="3" Justify="JustifyContent.FlexStart">        
            <FluentGridItem xs="12" md="12" lg="3">
                <FluentTabs ActiveTabId="docCfg">
                    <FluentTab Id="docParagraph" Label="Paragraph">
                        <Paragraph DocumentParagraph="@Model" />
                    </FluentTab>
                    <FluentTab Id="docTables" Label="Tables">
                        Tables here...
                    </FluentTab>
                    <FluentTab Id="docContents" Label="Content">
                        Contents here...
                    </FluentTab>
                </FluentTabs>
            </FluentGridItem>
            <FluentGridItem xs="12" md="12" lg="9">
            </FluentGridItem>
        </FluentGrid>
    };
}